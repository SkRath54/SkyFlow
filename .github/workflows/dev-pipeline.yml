name: SkyFlow Dev CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  py-generate-sample-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install Python Dependencies
        run: pip install boto3

      - name: Generate JSON Data
        run: python data_generator/generate_passenger_events.py

      - name: Upload JSON Data to S3
        run: python data_generator/upload_passenger_events.py

  py-upload-glue-script:
    runs-on: ubuntu-latest
    needs: py-generate-sample-data
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install Python Dependencies
        run: pip install boto3

      - name: Upload Glue Scripts to S3
        run: python data_transformation/util/upload_glue_jobs.py

  tf-update-glue-job:
    runs-on: ubuntu-latest
    needs: py-upload-glue-script
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Apply Glue Job Terraform
        working-directory: infra/glue_job
        run: |
          terraform init
          terraform apply -target=aws_glue_job.skyflow_transform_passenger_events -auto-approve

  py-trigger-glue-job:
    runs-on: ubuntu-latest
    needs: tf-update-glue-job
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Trigger Main Glue Job
        run: aws glue start-job-run --region ap-south-1 --job-name skyflow-transform-passenger-events

#  dbt-refresh-snowflake-ext:
#    runs-on: ubuntu-latest
#    needs: py-trigger-glue-job
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Refresh Snowflake External Table
#        working-directory: dbt/snowflake_dbt
#        env:
#          DBT_PROFILES_DIR: dbt
#          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
#          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
#          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
#          SNOWFLAKE_ROLE: ACCOUNTADMIN
#          SNOWFLAKE_WAREHOUSE: LOCALTOCLOUDWH
#        run: |
#          pip install dbt-core dbt-snowflake
#          echo "âŒ› Waiting for Glue job to finish writing to S3..."
#          sleep 180
#          dbt run-operation refresh_external_table
